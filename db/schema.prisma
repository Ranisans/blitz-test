// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id             Int       @default(autoincrement()) @id
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  name           String
  login          String
  hashedPassword String
  role           Role      @relation("UserHasRole",fields: [roleId], references: [id])
  roleId         Int
  sessions       Session[]
}

model Role {
  id             Int       @default(autoincrement()) @id
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  name           String
  users          User[]   @relation("UserHasRole")
}

model Session {
  id                 Int       @default(autoincrement()) @id
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  user               User?     @relation(fields: [userId], references: [id])
  userId             Int?
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
}

model Client {
  id            Int      @default(autoincrement()) @id
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  name          String
  enabled       Boolean  @default(true)
  mainObjects   MainObject[]
}

model Chief {
  id            Int      @default(autoincrement()) @id
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  name          String
  enabled       Boolean  @default(true)
  mainObjects   MainObject[]
}

model Deputy {
  id            Int      @default(autoincrement()) @id
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  name          String
  enabled       Boolean  @default(true)
  mainObjects   MainObject[]
}

model Route {
  id            Int      @default(autoincrement()) @id
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  name          String
  enabled       Boolean  @default(true)
  mainObjects   MainObject[]
}

model Company {
  id            Int      @default(autoincrement()) @id
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  name          String
  enabled       Boolean  @default(true)
  mainObjects   MainObject[]
}

model MainObject {
  id          Int      @default(autoincrement()) @id
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  number      String
  title       String?
  client      Client   @relation(fields: [clientId], references: [id])
  clientId    Int
  address     String?
  telephones  String?
  mode        String?
  signal      String?
  chief       Chief    @relation(fields: [chiefId], references: [id])
  chiefId     Int
  deputy      Deputy   @relation(fields: [deputyId], references: [id])
  deputyId    Int
  route       Route    @relation(fields: [routeId], references: [id])
  routeId     Int
  gps         String?
  company     Company  @relation(fields: [companyId], references: [id])
  companyId   Int
  typeCheck   Int?
  dayMode     Int      @default(0)
  daytimeMode Int      @default(0)
  nightMode   Int      @default(0)
  opened      Boolean
}
